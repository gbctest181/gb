{% extends 'base.html.twig' %}

{% block title %}Bon intervention {% endblock %}
{% block body %}
    {#_________Header___________#}
    <header class="jumbotron-fluid table-dark text-center ">
        <div class="Logo"></div>
        <div class="title">
            <h1>BON INTERVENTION</h1>
        </div>
    </header>
    {#_________Info___________#}
    <div class="container">
        <div class="row" style="border: 1px solid #0a0a0a">
            <div class="row"><!-- Client Final-->
                <div class="col">
                    <br>
                    <div class="col">
                        <U>Client</U> : <b>{{intervention.fkclient.raisonSociale}}</b>
                        <br>({{ intervention.fkclient.responsable }})
                    </div>
                    <div class="col">
                        <U>Adresse :</U><br>
                        {{ intervention.fkclient.adresse }}
                    </div>
                    <div class="col">
                        {{ intervention.fkclient.codepostal }} {{ intervention.fkclient.ville }}
                    </div>
                </div>
                <div class="col">
                    <br>
                    <div class="col">
                        <U>Telephone :</U> {{ intervention.fkclient.telephone }}
                    </div>
                    <div class="col">
                        <U>Mobile :</U>  {{ intervention.fkclient.mobile }}
                    </div>
                    <div class="col">
                        <U>Fax : </U>  {{ intervention.fkclient.fax }}
                    </div>
                    <div class="col">
                        <U>E-mail :</U>  {{ intervention.fkclient.email }}
                    </div>
                    <br>
                </div>
            </div><!-- Client Final-->
            <div class="row" style="border-left: 1px solid #0a0a0a"><!-- Client Intervention-->
                <div class="col">
                    <br>
                    <div class="col">
                            Client : {{ intervention.nom }}
                    </div>
                    <div class="col">
                        Adresse : {{ intervention.adresse }}
                    </div>
                    <div class="col">
                        {{ intervention.codepostal }} {{ intervention.ville }}
                    </div>
                </div>
                <div class="col">
                    <br>
                    <div class="col">
                        Telephone : {{ intervention.telephone }}
                    </div>
                    <div class="col">
                        Mobile : {{ intervention.mobile }}
                    </div>
                    <div class="col">
                        E-mail : {{ intervention.email }}
                    </div>
                </div>
            </div><!-- Client Intervention-->
        </div>
    </div>
    {#_________Etat___________#}
    <div class="container" style="border: 1px solid #0a0a0a">
        <br>
        <div class="container">
            <div class="form-row">
                <h6>État</h6>
                <div class="form-check ">
                    <label for="termine"> Terminé  </label>
                    <input class="form-check-label" type="radio" name="etat" id="termine" value="oui" >
                </div>
                <div class="form-check ">
                    <label for="poursuivre"> A poursuivre  </label>
                    <input class="form-check-label" type="radio" name="etat" id="poursuivre" value="non">
                </div>
            </div>
        </div>
        <div class="container">
            <div class="form-group row">
                {#             les boutons doivent envoyer une alerte pour la secretaire       #}
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" id="commande">
                    <label for="commande">A commander    </label>
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" id="essai">
                    <label for="essai">Essais/Mise en service    </label>
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" id="devis">
                    <label for="devis">Devis à faire    </label>
                </div>
            </div>
        </div>
    </div>
    {#_________Pièces et Main d'oeuvre___________#}
    <div class="container table-dark">
        <table class="table table-sm table-dark">
            <thead>
            <tr>
                <th scope="col">Code</th>
                <th scope="col">Désignation</th>
                <th scope="col">Qté</th>
                <th scope="col">Prix U. HT</th>
                <th scope="col">Prix Total HT</th>
            </tr>
            </thead>
            <tbody>
            {#    données de Matériel        #}
            <tr>
                <th scope="row"></th>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
            </tr>
            </tbody>
            {#     DIAC../MO../DEP..       #}
            <tfooter>
                <tr>
                    <th scope="row">DIAC</th>
                    <td>Divers Accessoires de Pose</td>
                    <td>
                        <input type="button" id="moinsDiac" value="-" />
                        <input type="text" name="qteDiac" id="qtDiac" placeholder="qté :" value="0" data-constraints="@Required @JustNumber">
                        <input type="button" id="plusDiac" value="+" />
                    </td>
                    <td>
                        <input type="text" name="pxDiac" id="pxDiac" placeholder="prix :" value="" data-constraints="@Required @JustNumber">
                    </td>
                    <td id="ttDiac"></td>
                </tr>
                <tr>
                    <th scope="row">MO...</th>
                    <td>Main d'oeuvre</td>
                    <td>
                        <input type="button" id="moinsMo" value="-" />
                        <input type="text" name="pxMo" id="qtMo" placeholder="qté :" value="0" data-constraints="@Required @JustNumber">
                        <input type="button" id="plusMo" value="+" />
                    </td>
                    <td>
                        <input type="text" name="pxMo" id="pxMo" placeholder="prix :" value="" data-constraints="@Required @JustNumber">
                    </td>
                    <td id="ttMo"></td>
                </tr>
                <tr>
                    <th scope="row">DEP...</th>
                    <td>Déplacement</td>
                    <td>
                        <input type="button" id="moinsDep" value="-" />
                        <input type="text" name="qteDep" id="qtDep" placeholder="qté :" value="0" data-constraints="@Required @JustNumber">
                        <input type="button" id="plusDep" value="+" />
                    </td>
                    <td>
                        <input type="text" name="pxDep" id="pxDep" placeholder="prix :" value="" data-constraints="@Required @JustNumber">
                    </td>
                    <td id="ttDep"></td>
                </tr>

                <tr>
                    <th></th>
                    <td></td>
                    <td></td>
                    <td>TOTAL HT</td>
                    <td></td>
                </tr>
            </tfooter>
        </table>
    </div>
    {#_________Rapport___________#}
    <div class="container">
        <div class="container" style="border: 1px solid #0a0a0a">
            <div class="row" style="border: 1px solid #0a0a0a">
                <div class="col">
                    Techniciens affectés sur l'intervention : {# Users #}
                </div>
                <div class="form-group row">
                    <label for="debut" class="col col-form-label">Début d'intervention</label>
                    <div class="col">
                        <input class="form-control" type="date" value="" id="debut">
                    </div>
                </div>
            </div>
            <div class="container">
                <div class="form-group">
                    <label for="rapport">Rapport technicien</label>
                    <textarea class="form-control" rows="5" id="rapport"></textarea>
                </div>
                <div class="container">
                    <div class="row">
                        <div class="form-check ">
                            <label for="observation"> Observations client  </label>
                            <input class="form-check-label" type="checkbox" name="observation" id="observation"  >
                        </div>
                        <div class="form-group col-6" id="obsClient" style="display: none" >
                            <label for="obs"></label>
                            <textarea class="form-control" rows="3"  id="obs" placeholder="Observations client :"></textarea>
                        </div>
                    </div>
                    <div class="container-fluid ">
                        <div class="row">
                            <div class="col"></div>
                            <div class="col-3">
                                <h4>Technicien</h4>
                                Nom : {#{{ user.username }}#}
                                <div class="container">
                                    <div class="row">
                                        <div class="col-md-12">
                                            <canvas id="sig-canvasT" width="250" height="100" style=" border: 2px dotted #CCCCCC; border-radius: 15px; cursor: crosshair; ">
                                            </canvas>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-12">
                                            <button class="btn btn-primary" id="sig-submitBtnT">Ok</button>
                                            <button class="btn btn-default" id="sig-clearBtnT">Effacer</button>
                                        </div>
                                    </div>
                                </div><!--SIGNATURE Technicien -->
                                {#            cachet sur le pdf                    #}
                            </div>
                            <div class="col"></div>
                            <div class="col-3">
                                Établi le {{ "now"|date("d/m/Y") }}
                                <br>
                                <button type="submit" class="btn btn-success ">Envoyer</button>
                            </div>
                            <div class="col"></div>
                            <div class="col-3">
                                <h4>LE CLIENT</h4>
                                Nom : {{ intervention.nom }}
                                <div class="container">
                                    <div class="row">
                                        <div class="col-md-12">
                                            <canvas id="sig-canvasC" width="250" height="100" style=" border: 2px dotted #CCCCCC; border-radius: 15px; cursor: crosshair; ">
                                            </canvas>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-12">
                                            <button class="btn btn-primary" id="sig-submitBtnC">Ok</button>
                                            <button class="btn btn-default" id="sig-clearBtnC">Effacer</button>
                                        </div>
                                    </div>
                                </div><!--SIGNATURE Client -->
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="retour">
        <button type="button" class="btn btn-danger"><a href="javascript:history.go(-1)">Retour</a></button>
    </div>
    {#_________Footer___________#}
    <footer class="jumbotron-fluid table-dark" id="footer">
        <div class="row">
            <div class="col-3">
                <div class="fblock-1"><a href="./"><img src="{{ asset('/public/images/logo.jpg') }}" alt="" ></a></div>
            </div>
            <div class="preffix_2 col-6">
                <div class="fblock-2">
                    <div class="fblock-2_s1">
                        <span class="fblock-2_s1_s1">GB CONCEPT</span>
                        &copy; <span id="copyright-year"></span>
                        | Mentions Légales</div>
                    <p>SARL GB CONCEPT-181, Rue de St Éxupéry-34130 MAUGUIO.</p>
                    <p>Tél: 04.20.30.28.28/ Fax: 04.67.82.75.38 Email: contact@gbconcept34.fr - RCS Montpellier 501 826 176</p>
                </div>
            </div>
        </div>
    </footer>

    <script>
        (function() {
            window.requestAnimFrame = (function(callback) {
                return window.requestAnimationFrame ||
                    window.webkitRequestAnimationFrame ||
                    window.mozRequestAnimationFrame ||
                    window.oRequestAnimationFrame ||
                    window.msRequestAnimaitonFrame ||
                    function(callback) {
                        window.setTimeout(callback, 1000 / 60);
                    };
            })();
            const canvasTech = document.getElementById("sig-canvasT");
            const ctxTech = canvasTech.getContext("2d");
            ctxTech.strokeStyle = "#222222";
            ctxTech.lineWidth = 1;

            let drawing = false;
            let mousePos = {
                x: 0,
                y: 0
            };
            let lastPos = mousePos;

            canvasTech.addEventListener("mousedown", function(e) {
                drawing = true;
                lastPos = getMousePos(canvasTech, e);
            }, false);

            canvasTech.addEventListener("mouseup", function(e) {
                drawing = false;
            }, false);

            canvasTech.addEventListener("mousemove", function(e) {
                mousePos = getMousePos(canvasTech, e);
            }, false);

            // Ajouter un support d'événement tactile pour mobile
            canvasTech.addEventListener("touchstart", function(e) {
            }, false);

            canvasTech.addEventListener("touchmove", function(e) {
                const touch = e.touches[0];
                const me = new MouseEvent("mousemove", {
                    clientX: touch.clientX,
                    clientY: touch.clientY
                });
                canvasTech.dispatchEvent(me);
            }, false);

            canvasTech.addEventListener("touchstart", function(e) {
                mousePos = getTouchPos(canvasTech, e);
                const touch = e.touches[0];
                const me = new MouseEvent("mousedown", {
                    clientX: touch.clientX,
                    clientY: touch.clientY
                });
                canvasTech.dispatchEvent(me);
            }, false);

            canvasTech.addEventListener("touchend", function(e) {
                const me = new MouseEvent("mouseup", {});
                canvasTech.dispatchEvent(me);
            }, false);

            function getMousePos(canvasDom, mouseEvent) {
                const rect = canvasDom.getBoundingClientRect();
                return {
                    x: mouseEvent.clientX - rect.left,
                    y: mouseEvent.clientY - rect.top
                }
            }

            function getTouchPos(canvasDom, touchEvent) {
                const rect = canvasDom.getBoundingClientRect();
                return {
                    x: touchEvent.touches[0].clientX - rect.left,
                    y: touchEvent.touches[0].clientY - rect.top
                }
            }

            function renderCanvas() {
                if (drawing) {
                     ctxTech.moveTo(lastPos.x, lastPos.y);
                     ctxTech.lineTo(mousePos.x, mousePos.y);
                     ctxTech.stroke();
                    lastPos = mousePos;
                }
            }

            // Empêcher le défilement lorsque vous touchez la zone de signature
            document.body.addEventListener("touchstart", function(e) {
                if (e.target === canvasTech) {
                    e.preventDefault();
                }
            }, false);
            document.body.addEventListener("touchend", function(e) {
                if (e.target === canvasTech) {
                    e.preventDefault();
                }
            }, false);
            document.body.addEventListener("touchmove", function(e) {
                if (e.target === canvasTech) {
                    e.preventDefault();
                }
            }, false);

            (function drawLoop() {
                requestAnimFrame(drawLoop);
                renderCanvas();
            })();

            function clearCanvas() {
                canvasTech.width = canvasTech.width;
            }

            // Configurer l'interface utilisateur
            const sigTextT = document.getElementById("sig-dataUrlT");
            const sigImageT = document.getElementById("sig-imageT");
            const clearBtnT = document.getElementById("sig-clearBtnT");
            const submitBtnT = document.getElementById("sig-submitBtnT");
            clearBtnT.addEventListener("click", function(e) {
                clearCanvas();
                sigTextT.innerHTML = "L'URL des données pour votre signature ira ici!";
                sigImageT.setAttribute("src", "");
            }, false);
            submitBtnT.addEventListener("click", function(e) {
                const dataUrlT = canvasTech.toDataURL();
                //  sigTextT.innerHTML = dataUrlT;           lien image pour la signature
                //  sigImageT.setAttribute("src", dataUrl);
            }, false);
        })();
        {#                            <br/>#}
        {#                            <div class="row">#}
        {#                                <div class="col-md-12">#}
        {#                                    <textarea id="sig-dataUrlT" class="form-control" rows="5">L'URL de données pour votre signature ira ici!</textarea>#}
        {#                                </div>#}
        {#                            </div>#}
        {#                            <br/>#}
        {#                            <div class="row">#}
        {#                                <div class="col-md-12">#}
        {#                                    <img id="sig-imageT" src="" alt="Your signature will go here!"/>#}
        {#                                </div>#}
        {#                            </div>#}
        {#                     </div>#}
        {#                        #}

    </script><!--SIGNATURE Technicien-->
    <script>
        (function() {
            window.requestAnimFrame = (function(callback) {
                return window.requestAnimationFrame ||
                    window.webkitRequestAnimationFrame ||
                    window.mozRequestAnimationFrame ||
                    window.oRequestAnimationFrame ||
                    window.msRequestAnimaitonFrame ||
                    function(callback) {
                        window.setTimeout(callback, 1000 / 60);
                    };
            })();
            const canvasCl = document.getElementById("sig-canvasC");
            const  ctxCl = canvasCl.getContext("2d");
             ctxCl.strokeStyle = "#222222";
             ctxCl.lineWidth = 1;

            let drawing = false;
            let mousePos = {
                x: 0,
                y: 0
            };
            let lastPos = mousePos;

            canvasCl.addEventListener("mousedown", function(e) {
                drawing = true;
                lastPos = getMousePos(canvasCl, e);
            }, false);

            canvasCl.addEventListener("mouseup", function(e) {
                drawing = false;
            }, false);

            canvasCl.addEventListener("mousemove", function(e) {
                mousePos = getMousePos(canvasCl, e);
            }, false);

            // Ajouter un support d'événement tactile pour mobile
            canvasCl.addEventListener("touchstart", function(e) {
            }, false);

            canvasCl.addEventListener("touchmove", function(e) {
                const touch = e.touches[0];
                const me = new MouseEvent("mousemove", {
                    clientX: touch.clientX,
                    clientY: touch.clientY
                });
                canvasCl.dispatchEvent(me);
            }, false);

            canvasCl.addEventListener("touchstart", function(e) {
                mousePos = getTouchPos(canvasCl, e);
                const touch = e.touches[0];
                const me = new MouseEvent("mousedown", {
                    clientX: touch.clientX,
                    clientY: touch.clientY
                });
                canvasCl.dispatchEvent(me);
            }, false);

            canvasCl.addEventListener("touchend", function(e) {
                const me = new MouseEvent("mouseup", {});
                canvasCl.dispatchEvent(me);
            }, false);

            function getMousePos(canvasDom, mouseEvent) {
                const rect = canvasDom.getBoundingClientRect();
                return {
                    x: mouseEvent.clientX - rect.left,
                    y: mouseEvent.clientY - rect.top
                }
            }

            function getTouchPos(canvasDom, touchEvent) {
                const rect = canvasDom.getBoundingClientRect();
                return {
                    x: touchEvent.touches[0].clientX - rect.left,
                    y: touchEvent.touches[0].clientY - rect.top
                }
            }

            function renderCanvas() {
                if (drawing) {
                     ctxCl.moveTo(lastPos.x, lastPos.y);
                     ctxCl.lineTo(mousePos.x, mousePos.y);
                     ctxCl.stroke();
                    lastPos = mousePos;
                }
            }

            // Empêcher le défilement lorsque vous touchez la zone de signature
            document.body.addEventListener("touchstart", function(e) {
                if (e.target === canvasCl) {
                    e.preventDefault();
                }
            }, false);
            document.body.addEventListener("touchend", function(e) {
                if (e.target === canvasCl) {
                    e.preventDefault();
                }
            }, false);
            document.body.addEventListener("touchmove", function(e) {
                if (e.target === canvasCl) {
                    e.preventDefault();
                }
            }, false);

            (function drawLoop() {
                requestAnimFrame(drawLoop);
                renderCanvas();
            })();

            function clearCanvas() {
                canvasCl.width = canvasCl.width;
            }

            // Configurer l'interface utilisateur
            const sigTextC = document.getElementById("sig-dataUrlC");
            const sigImageC = document.getElementById("sig-imageC");
            const clearBtnC = document.getElementById("sig-clearBtnC");
            const submitBtnC = document.getElementById("sig-submitBtnC");
            clearBtnC.addEventListener("click", function(e) {
                clearCanvas();
                sigTextC.innerHTML = "L'URL des données pour votre signature ira ici!";
                sigImageC.setAttribute("src", "");
            }, false);
            submitBtnC.addEventListener("click", function(e) {
                const dataUrlC = canvasCl.toDataURL();
                //  sigTextC.innerHTML = dataUrlC;           lien image pour la signature
                //  sigImageC.setAttribute("src", dataUrl);
            }, false);
        })();
    </script><!--SIGNATURE Client-->
    <script>
        let qtDiac = $('#qtDiac').val();
        let qtMo = $('#qtMo').val();
        let qtDep = $('#qtDep').val();
        var pxDiac = $('#pxDiac');
        var pxMo = $('#pxMo');
        var pxDep = $('#pxDep');

        $("#moinsDep").click(function () {
            if (qtDep <= 0){
                qtDep = 0
            }else {
                qtDep--;
                $('#qtDep').val(qtDep);
            }
        });

        $("#plusDep").click(function () {
            qtDep++;
            $('#qtDep').val(qtDep);
        });

        $("#moinsDiac").click(function () {
            if (qtDiac <= 0){
                qtDiac = 0
            }else {
                qtDiac--;
                $('#qtDiac').val(qtDiac);
            }
        });

        $("#plusDiac").click(function () {
            qtDiac++;
            $('#qtDiac').val(qtDiac);
        });

        $("#moinsMo").click(function () {
            if (qtMo <= 0){
                qtMo = 0
            }else {
                qtMo--;
                $('#qtMo').val(qtMo);
            }
        });

        $("#plusMo").click(function () {
            qtMo++;
            $('#qtMo').val(qtMo);
        });
        // $ttDiac = $qtDiac * $pxDiac;
        // $ttMo= $qtMo * $pxMo;
        // $ttDep= $qtDep * $pxDep;
    </script><!-- quantités boutons-->
    <script>
        $('#observation').change(function () {
            {
                if (this.checked) {
                    document.querySelector('#obsClient').style.display = 'block';
                } else if(!this.checked) {
                    document.querySelector('#obsClient').style.display = 'none';
                }
            }
        })
    </script><!--Obsvervation client-->
{% endblock %}